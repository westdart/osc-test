---
- name: Add Registry Secret to namespace
  hosts: localhost

  vars_files:
    - "{{ credential_vault }}"

  tasks:
    - include_tasks: ../tasks/load_credential_vault.yml

    - name: Login to Registry Openshift to obtain token if Registry is running under Openshift
      include_role:
        name: ar_os_common
        tasks_from: login
      vars:
        ar_os_common_openshift_login_url: "{{ registry_login_credentials[registry_server][0].openshift_url }}"
        ar_os_common_openshift_username: "{{ registry_login_credentials[registry_server][0].username }}"
        ar_os_common_openshift_password: "{{ registry_login_credentials[registry_server][0].password }}"
      when: "'openshift_url' in registry_login_credentials[registry_server][0]"

    - name: Obtain the Openshift Token
      command: oc whoami -t
      register: oc_token_result
      changed_when: false
      when: "'openshift_url' in registry_login_credentials[registry_server][0]"

    - set_fact:
        _password: "{{ oc_token_result.stdout }}"
      when: "'openshift_url' in registry_login_credentials[registry_server][0]"

    - name: "Assert OpenShift Login URL provided"
      assert:
        that:
          - "oc_login_url is defined"

    - name: Login to target OpenShift
      include_role:
        name: ar_os_common
        tasks_from: login
      vars:
        ar_os_common_openshift_login_force: true
        ar_os_common_openshift_login_url: "{{ oc_login_url }}"
        ar_os_common_openshift_username: "{{ openshift_login_credentials[oc_login_url].openshift_user }}"
        ar_os_common_openshift_password: "{{ openshift_login_credentials[oc_login_url].openshift_password | default('') }}"
        ar_os_common_openshift_token: "{{ openshift_login_credentials[oc_login_url].openshift_token | default('') }}"

    - name: Include common role to add registry secret
      include_role:
        name: ar_os_registry_secret
        tasks_from: registry-secret
      vars:
        ar_os_registry_secret_namespace: "{{ registry_secret_namespace }}"
        ar_os_registry_secret_item: {
          secret_name: "{{ item.secret_name | default(registry_secret_name) }}",
          server: "{{ registry_server }}",
          username: "{{ item.username }}",
          password: "{{ _password | default(item.password) | default('') }}",
          token: "{{ item.token | default('') }}",
          email: "{{ item.email | default('') }}",
          operation: "{{ item.operation | default('pull') }}"
        }
      with_items: "{{ registry_login_credentials[registry_server] }}"
