---
- hosts: localhost
  become: no

  vars_files:
    - gitcredentials.vault

  tasks:
    - include_tasks: ../tasks/ensure_environment_vars.yml
    - include_tasks: ../tasks/load_credential_vault.yml

    - name: Set path variables
      set_fact:
        generated_secrets_config_path: "/tmp/builddir"

    - name: Ensure vault dir exsits
      file:
        path: "{{ generated_secrets_config_path }}"
        state: directory
        mode: 0700

    - name: check if secret vault exists
      stat:
        path: "{{ app_vault_file_name }}"
      register: app_vault

    - set_fact:
        tmp_secret_file: "{{ generated_secrets_config_path }}/{{ 1000 | random(seed=inventory_hostname) | to_uuid }}.yml"
      when: not app_vault.stat.exists | bool

    - name: Generate ssh key for Aspera (Ansible version >= 2.8)
      include_tasks: ../tasks/ssh_key_gen_mod.yml
      when: not app_vault.stat.exists | bool and ansible_version.full >= "2.8.0"

    - name: Generate ssh key for Aspera (Ansible version < 2.8)
      include_tasks: ../tasks/ssh_key_gen_cmd.yml
      when: not app_vault.stat.exists | bool and ansible_version.full < "2.8.0"

    - name: Create the yml secrets
      template:
        src: ../templates/secrets.yml.j2
        dest: "{{ tmp_secret_file }}"
      changed_when: false
      when: not app_vault.stat.exists | bool

    - name: Create tmp secret
      copy:
        dest: "{{ generated_secrets_config_path }}/.secret"
        content: "{{ app_vault_passphrase | default('password') }}"
        mode: 0600
      when: not app_vault.stat.exists | bool

    - name: Create the vault
      shell: "ansible-vault encrypt {{ tmp_secret_file }} \
                --vault-password-file={{ generated_secrets_config_path }}/.secret \
                --output={{ app_vault_file_name }}"
      when: not app_vault.stat.exists | bool

    - name: Remove secret
      file:
        path: "{{ generated_secrets_config_path }}/.secret"
        state: absent
      changed_when: false
      when: not app_vault.stat.exists | bool

    - name: Remove tmp secrets
      file:
        path: "{{ tmp_secret_file }}"
        state: absent
      changed_when: false
      when: not app_vault.stat.exists | bool

    - name: Remove TLS keys
      file:
        path: "{{ local_key_path }}/{{ app_instance.name }}.key"
        state: absent
      with_items:
        - "{{ app_target_instances }}"
      loop_control:
        loop_var: app_instance
      changed_when: false
      when: not app_vault.stat.exists | bool

    - name: Remove SSH keys
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "/tmp/aspera_id_ssh_rsa"
        - "/tmp/aspera_id_ssh_rsa.pub"
      changed_when: false
      when: not app_vault.stat.exists | bool

    - include_tasks: ../tasks/checkpoint_environment_vars.yml
