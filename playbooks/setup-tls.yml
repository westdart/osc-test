---
# Note that the CA setup and host key and certs are created on the same machine (localhost) here.
# In a real deployment these will likely be required to be on different servers.

- name: Setup TLS Certificates
  hosts: localhost

  vars_files:
    - gitcredentials.vault

  tasks:
    - include_tasks: ../tasks/ensure_environment_vars.yml
    - include_tasks: ../tasks/load_credential_vault.yml

    - debug: var=app_target_instance_names

    - name: Show targets
      debug:
        msg: "Target instance names: {{ app_target_instance_names }}"

    - name: Show target instances
      debug: var=app_target_instances verbosity=2

    - name: "Setup CA"
      include_role:
        name: ar_tls_ca
      vars:
        ar_tls_ca_path: "{{ ca_base_path }}"
        ar_tls_ca_name: "{{ ca_name }}"
        ar_tls_ca_git_ssh_key: "{{ git_credentials[ar_tls_ca_git_repo].ssh_key }}"

    - name: Ensure local cert directory exists
      file:
        path: "{{ item }}"
        state: directory
        mode: 0700
      with_items:
        - "{{ local_cert_path }}"
        - "{{ local_key_path }}"

    - debug:
        msg: "{{ item.name }} Checking Cert Subject: {{ item | cert_subject_x509(deployment_phase, cert_defaults) }}"
      with_items:
        - "{{ app_target_instances }}"

    - name: Check if CSR needs to be recreated (i.e. if subject has changed)
      shell: "test -f {{ local_cert_path }}/{{ item.name }}.csr || exit 0; openssl req -in {{ local_cert_path }}/{{ item.name }}.csr -noout -subject"
      register: csr_stat
      changed_when: csr_stat.stdout | cert_subject_differs(item, deployment_phase, cert_defaults)
      with_items:
        - "{{ app_target_instances }}"

    - name: Remove old CSRs
      file:
        path: "{{ local_cert_path }}/{{ csr_stat_result.item.name }}.csr"
        state: absent
      when: csr_stat_result.changed
      with_items: "{{ csr_stat.results }}"
      loop_control:
        loop_var: csr_stat_result

    - debug:
        msg: "{{ item.name }} Setting Cert Subject: {{ item | cert_subject(deployment_phase, cert_defaults) }}"
      with_items:
        - "{{ app_target_instances }}"

    - debug:
        msg: "Generating key and CSR: {{ local_key_path }}/{{ item.name }}.key -> {{ local_cert_path }}/{{ item.name }}.csr -> {{ ca_base_path }}/in/{{ item.name }}.csr"
      with_items:
        - "{{ app_target_instances }}"

    - name: Generate Keys and CSRs
      shell: "openssl req -nodes -batch \
              -out {{ local_cert_path }}/{{ item.name }}.csr \
              -newkey rsa:2048 -days 365 \
              -keyout {{ local_key_path }}/{{ item.name }}.key \
              -subj \"{{ item | cert_subject(deployment_phase, cert_defaults) }}\""
      args:
        creates: "{{ local_cert_path }}/{{ item.name }}.csr"
      with_items:
        - "{{ app_target_instances }}"

    - name: Copy CSR to CA
      copy:
        src: "{{ local_cert_path }}/{{ item.name }}.csr"
        dest: "{{ ca_base_path }}/in/{{ item.name }}.csr"
      with_items:
        - "{{ app_target_instances }}"

    - set_fact:
        revocation_list: []

    - name: Build cert revocation list
      set_fact:
        revocation_list: "{{ revocation_list + [csr_stat_result.item.name] }}"
      when: csr_stat_result.changed and csr_stat_result.stdout | length > 0
      with_items: "{{ csr_stat.results }}"
      loop_control:
        loop_var: csr_stat_result

    - name: "Use CA to revoke certificates"
      include_role:
        name: ar_tls_ca
        tasks_from: sign
      vars:
        ar_tls_ca_path: "{{ ca_base_path }}"
        ar_tls_ca_name: "{{ ca_name }}"
        ar_tls_ca_certlist: []
        ar_tls_ca_revocation_list: "{{ revocation_list }}"
        ar_tls_ca_git_ssh_key: "{{ git_credentials[ar_tls_ca_git_repo].ssh_key }}"

    - name: "Use CA to sign certificates"
      include_role:
        name: ar_tls_ca
        tasks_from: sign
      vars:
        ar_tls_ca_path: "{{ ca_base_path }}"
        ar_tls_ca_name: "{{ ca_name }}"
        ar_tls_ca_certlist: [
          {"certfile": "{{ item.name }}.crt", "csrfile": "{{ item.name }}.csr", "altnames": ["{{ item | external_ic_host(deployment_phase, amq_ic_domain) }}"], "ipaddrs": []}
        ]
        ar_tls_ca_git_ssh_key: "{{ git_credentials[ar_tls_ca_git_repo].ssh_key }}"
      with_items:
        - "{{ app_target_instances }}"

    - name: Copy the signed certs from CA
      copy:
        src: "{{ ca_base_path }}/out/{{ item }}.crt"
        dest: "{{ local_cert_path }}/{{ item }}.crt"
      with_items:
        - "{{ app_target_instances | json_query('[*].name') }}"
        - "{{ ca_name }}"

    - include_tasks: ../tasks/checkpoint_environment_vars.yml